//////////////////////////////////////////////////////////////////////
/// @file norm.h
/// @author Christine Wang CS5201
/// @brief norm function class
//////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////// 
/// @class norm
/// @brief 1-Norm Operation Implementation
////////////////////////////////////////////////////////////////////// 

////////////////////////////////////////////////////////////////////// 
/// @fn operator(const vector<cylindricalNum<T> > &vect)
/// @brief Takes a set of cylindricalNum and returns the sum
/// @pre N/A
/// @post N/A
/// @return Sum of the magnitudes of cylindricalNum vect
////////////////////////////////////////////////////////////////////// 

#ifndef NORM_H
#define NORM_H

class norm
{
public:
		template <class T>
		T operator ()(const vector<cylindricalNum<T> >& vect)
		{
			T sum = 0;	// initialized to zero
			for(int i = 0; i < vect.size(); i++)	// loop through set
			{
				sum += ~vect[i];	// adds cylindricalNum magnitude at set[i]
			}

			return sum;
		}
};

#endif
